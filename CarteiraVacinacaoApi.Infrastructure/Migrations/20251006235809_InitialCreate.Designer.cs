// <auto-generated />
using System;
using CarteiraVacinacaoApi.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarteiraVacinacaoApi.Infrastructure.Migrations
{
    [DbContext(typeof(VaccineRecordDbContext))]
    [Migration("20251006235809_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("CarteiraVacinacaoApi.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Leonardo Gomes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Larissa Vancini"
                        });
                });

            modelBuilder.Entity("CarteiraVacinacaoApi.Domain.Entities.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DosesRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vaccine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DosesRequired = 2,
                            Name = "Covid-19"
                        },
                        new
                        {
                            Id = 2,
                            DosesRequired = 2,
                            Name = "Febre Amarela"
                        },
                        new
                        {
                            Id = 3,
                            DosesRequired = 1,
                            Name = "Gripe 2025"
                        });
                });

            modelBuilder.Entity("CarteiraVacinacaoApi.Domain.Entities.VaccineRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VaccineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("VaccineId");

                    b.ToTable("VaccineRecord", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppliedDate = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoseNumber = 1,
                            PersonId = 1,
                            VaccineId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppliedDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoseNumber = 2,
                            PersonId = 1,
                            VaccineId = 1
                        },
                        new
                        {
                            Id = 3,
                            AppliedDate = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoseNumber = 1,
                            PersonId = 2,
                            VaccineId = 1
                        },
                        new
                        {
                            Id = 4,
                            AppliedDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoseNumber = 2,
                            PersonId = 2,
                            VaccineId = 1
                        },
                        new
                        {
                            Id = 5,
                            AppliedDate = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoseNumber = 1,
                            PersonId = 1,
                            VaccineId = 3
                        });
                });

            modelBuilder.Entity("CarteiraVacinacaoApi.Domain.Entities.VaccineRecord", b =>
                {
                    b.HasOne("CarteiraVacinacaoApi.Domain.Entities.Person", "Person")
                        .WithMany("VaccineRecords")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarteiraVacinacaoApi.Domain.Entities.Vaccine", "Vaccine")
                        .WithMany()
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("CarteiraVacinacaoApi.Domain.Entities.Person", b =>
                {
                    b.Navigation("VaccineRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
